version: 2.1

executors:
  php73:
    working_directory: '~/project'
    docker:
      - image: 'circleci/php:7.3'

  php74:
    working_directory: '~/project'
    docker:
      - image: 'circleci/php:7.4'

  php80:
    working_directory: '~/project'
    docker:
      - image: 'circleci/php:8.0'

commands:
    php--run-unit-tests:
        steps:
            - attach_workspace:
                at: '.'
            - run:
                name: 'Run unit tests'
                command: 'phpdbg -qrr vendor/bin/phpunit'

            - store_test_results:
                path: '.phpunit/report'

    php--run-static-analysis:
        steps:
            - attach_workspace:
                at: '.'
            - run:
                name: 'Run syntax check'
                command: 'composer lint'
            - run:
                name: 'Run code formatting check'
                command: 'composer sniff'

persist_workspace: &persist_workspace
    persist_to_workspace:
        root: '.'
        paths: [ '.' ]

workflows:

    version: 2

    pipeline:
        jobs:
            - fetch_code

            - php73_install_dependencies:
                requires: [ fetch_code ]
            - php73_testing:
                requires: [ php73_install_dependencies ]

            - php74_install_dependencies:
                requires: [ fetch_code ]
            - php74_testing:
                requires: [ php74_install_dependencies ]

            - php80_install_dependencies:
                requires: [ fetch_code ]
            - php80_testing:
                requires: [ php80_install_dependencies ]

            - fan_in:
                requires:
                    - 'php73_testing'
                    - 'php74_testing'
                    - 'php80_testing'

jobs:

    fan_in:
        executor: 'php73'
        steps: [ { run: 'whoami' } ]

    fetch_code:
        executor: 'php73'
        steps:
            - checkout
            - *persist_workspace

    php73_install_dependencies:
        executor: 'php73'
        environment: [ {PHP_VERSION: 'php73'} ]
        steps:
            - attach_workspace:
                at: '.'

            - restore_cache: { keys: [ 'v1-php73-deps-{{ checksum "composer.json" }}', 'v1-php73-deps' ] }

            - run:
                name: 'Install PHP dependencies'
                command: 'composer --no-interaction --no-progress install && composer show'

            - save_cache: { key: 'v1-php73-deps-{{ checksum "composer.json" }}', paths: [ 'vendor' ] }

            - *persist_workspace

    php73_testing:
        executor: 'php73'
        steps:
            - php--run-static-analysis
            - php--run-unit-tests

    php74_install_dependencies:
        executor: 'php74'
        environment: [ {PHP_VERSION: 'php74'} ]
        steps:
            - attach_workspace:
                at: '.'

            - restore_cache: { keys: [ 'v1-php74-deps-{{ checksum "composer.json" }}', 'v1-php74-deps' ] }

            - run:
                name: 'Install PHP dependencies'
                command: 'composer --no-interaction --no-progress install && composer show'

            - save_cache: { key: 'v1-php74-deps-{{ checksum "composer.json" }}', paths: [ 'vendor' ] }

            - *persist_workspace

    php74_testing:
        executor: 'php74'
        steps:
            - php--run-static-analysis
            - php--run-unit-tests

    php80_install_dependencies:
        executor: 'php80'
        environment: [ {PHP_VERSION: 'php80'} ]
        steps:
            - attach_workspace:
                at: '.'

            - restore_cache: { keys: [ 'v1-php80-deps-{{ checksum "composer.json" }}', 'v1-php80-deps' ] }

            - run:
                name: 'Install PHP dependencies'
                command: 'composer --no-interaction --no-progress install && composer show'

            - save_cache: { key: 'v1-php80-deps-{{ checksum "composer.json" }}', paths: [ 'vendor' ] }

            - *persist_workspace

    php80_testing:
        executor: 'php80'
        steps:
            - php--run-static-analysis
            - php--run-unit-tests
